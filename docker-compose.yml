# docker-compose.yml
version: '3'
services:
  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer  # consumer.py를 위한 새로운 Dockerfile
    env_file:
      - .env.dev
    environment:
      - IN_CONTAINER=YES
  web:
    build: .
    #    command: python manage.py runserver 0.0.0.0:8000
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --timeout=60
    volumes:
      - static_volume:/usr/src/app/_static
      - media_volume:/usr/src/app/_media
    expose:
      - 8000
    env_file:
      - ./.env.dev
    environment:
      - IN_CONTAINER=YES
  nginx:
    build: ./nginx
    volumes:
      - ./static:/usr/src/app/_static
      - media_volume:/usr/src/app/_media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:var/www/certbot
volumes:
  static_volume:
  media_volume: